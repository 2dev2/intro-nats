// Code generated by protoc-gen-go. DO NOT EDIT.
// source: search_service.proto

package search_service

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Anime struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Author               string   `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Anime) Reset()         { *m = Anime{} }
func (m *Anime) String() string { return proto.CompactTextString(m) }
func (*Anime) ProtoMessage()    {}
func (*Anime) Descriptor() ([]byte, []int) {
	return fileDescriptor_d511c217b3936007, []int{0}
}

func (m *Anime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Anime.Unmarshal(m, b)
}
func (m *Anime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Anime.Marshal(b, m, deterministic)
}
func (m *Anime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Anime.Merge(m, src)
}
func (m *Anime) XXX_Size() int {
	return xxx_messageInfo_Anime.Size(m)
}
func (m *Anime) XXX_DiscardUnknown() {
	xxx_messageInfo_Anime.DiscardUnknown(m)
}

var xxx_messageInfo_Anime proto.InternalMessageInfo

func (m *Anime) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Anime) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Anime) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

type Animes struct {
	Animes               []*Anime `protobuf:"bytes,1,rep,name=animes,proto3" json:"animes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Animes) Reset()         { *m = Animes{} }
func (m *Animes) String() string { return proto.CompactTextString(m) }
func (*Animes) ProtoMessage()    {}
func (*Animes) Descriptor() ([]byte, []int) {
	return fileDescriptor_d511c217b3936007, []int{1}
}

func (m *Animes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Animes.Unmarshal(m, b)
}
func (m *Animes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Animes.Marshal(b, m, deterministic)
}
func (m *Animes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Animes.Merge(m, src)
}
func (m *Animes) XXX_Size() int {
	return xxx_messageInfo_Animes.Size(m)
}
func (m *Animes) XXX_DiscardUnknown() {
	xxx_messageInfo_Animes.DiscardUnknown(m)
}

var xxx_messageInfo_Animes proto.InternalMessageInfo

func (m *Animes) GetAnimes() []*Anime {
	if m != nil {
		return m.Animes
	}
	return nil
}

type SearchRequest struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Page                 int32    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Size                 int32    `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d511c217b3936007, []int{2}
}

func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *SearchRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *SearchRequest) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func init() {
	proto.RegisterType((*Anime)(nil), "Anime")
	proto.RegisterType((*Animes)(nil), "Animes")
	proto.RegisterType((*SearchRequest)(nil), "SearchRequest")
}

func init() { proto.RegisterFile("search_service.proto", fileDescriptor_d511c217b3936007) }

var fileDescriptor_d511c217b3936007 = []byte{
	// 209 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x31, 0x4f, 0x85, 0x30,
	0x14, 0x85, 0x05, 0x6c, 0x8d, 0x57, 0x65, 0x68, 0x88, 0x69, 0x1c, 0x0c, 0xe9, 0x84, 0x0b, 0x03,
	0x6e, 0x6e, 0x0e, 0x8e, 0x2e, 0xe5, 0x07, 0x98, 0x0a, 0x37, 0xd2, 0x44, 0x05, 0xda, 0x62, 0xe2,
	0xfb, 0xf5, 0x2f, 0xdc, 0xf6, 0x0d, 0x6f, 0x3b, 0xe7, 0x23, 0xb9, 0xdf, 0xa1, 0x50, 0x79, 0x34,
	0x6e, 0x98, 0x3e, 0x3c, 0xba, 0x3f, 0x3b, 0x60, 0xbb, 0xb8, 0x39, 0xcc, 0xea, 0x0d, 0xd8, 0xeb,
	0xaf, 0xfd, 0x41, 0x51, 0x42, 0x6e, 0x47, 0x99, 0xd5, 0x59, 0x73, 0xad, 0x73, 0x3b, 0x8a, 0x0a,
	0x58, 0xb0, 0xe1, 0x1b, 0x65, 0x4e, 0x28, 0x16, 0x71, 0x0f, 0xdc, 0x6c, 0x61, 0x9a, 0x9d, 0x2c,
	0x08, 0xa7, 0xa6, 0x1a, 0xe0, 0x74, 0xc6, 0x8b, 0x47, 0xe0, 0x86, 0x92, 0xcc, 0xea, 0xa2, 0xb9,
	0xe9, 0x78, 0x4b, 0x1f, 0x74, 0xa2, 0xea, 0x1d, 0xee, 0x7a, 0x1a, 0xa2, 0x71, 0xdd, 0xd0, 0x87,
	0x5d, 0xb4, 0x6e, 0xe8, 0xfe, 0x93, 0x3b, 0x16, 0x21, 0xe0, 0x72, 0x31, 0x5f, 0xd1, 0xce, 0x34,
	0xe5, 0x9d, 0x79, 0x7b, 0x40, 0x52, 0x33, 0x4d, 0xb9, 0x7b, 0x39, 0x9d, 0xeb, 0xe3, 0x6f, 0x89,
	0x27, 0xb8, 0x8d, 0x20, 0xed, 0x29, 0xdb, 0x33, 0xdd, 0xc3, 0x55, 0xdc, 0xe3, 0xd5, 0xc5, 0x27,
	0xa7, 0x27, 0x78, 0x3e, 0x06, 0x00, 0x00, 0xff, 0xff, 0x83, 0x78, 0x3f, 0x61, 0x1a, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SearchServiceClient is the client API for SearchService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SearchServiceClient interface {
	SearchAnimes(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*Animes, error)
}

type searchServiceClient struct {
	cc *grpc.ClientConn
}

func NewSearchServiceClient(cc *grpc.ClientConn) SearchServiceClient {
	return &searchServiceClient{cc}
}

func (c *searchServiceClient) SearchAnimes(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*Animes, error) {
	out := new(Animes)
	err := c.cc.Invoke(ctx, "/SearchService/SearchAnimes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SearchServiceServer is the server API for SearchService service.
type SearchServiceServer interface {
	SearchAnimes(context.Context, *SearchRequest) (*Animes, error)
}

func RegisterSearchServiceServer(s *grpc.Server, srv SearchServiceServer) {
	s.RegisterService(&_SearchService_serviceDesc, srv)
}

func _SearchService_SearchAnimes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).SearchAnimes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SearchService/SearchAnimes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).SearchAnimes(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SearchService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "SearchService",
	HandlerType: (*SearchServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SearchAnimes",
			Handler:    _SearchService_SearchAnimes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "search_service.proto",
}
